name:  CI/CD to EC2 with Docker

on:
  push:
    branches:
      - main


jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      mariadb:
        image: mariadb:10.6
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: testdb
          MYSQL_USER: myuser
          MYSQL_PASSWORD: mypass
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Generate application.yml for CI test
        run: echo "${{ secrets.APPLICATION_PROPERTIES }}" > src/main/resources/application.yml

      - name: Build with Test
        run: ./gradlew clean build

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: myshop-jar
          path: build/libs/myshop-0.0.1-SNAPSHOT.jar

  Deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: myshop-jar
          path: build/libs

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/myshop:latest .

      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/myshop:latest

      - name: SSH(원격 접속)로 EC2에 접속하기
        uses: appleboy/ssh-action@v1.0.3
        env:
          APPLICATION_PROD_YML: ${{ secrets.APPLICATION_PROD_YML }}
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          envs: APPLICATION_PROD_YML
          script_stop: true
          script: |
            mkdir -p /home/ubuntu/app-config
            rm -rf /home/ubuntu/app-config/application-prod.yml
            echo "$APPLICATION_PROD_YML" > /home/ubuntu/app-config/application-prod.yml
            
            docker pull ${{ secrets.DOCKER_USERNAME }}/myshop:latest
            docker stop myshop || true
            docker rm myshop || true

            docker run -d -p 8081:8081 \
              -v /home/ubuntu/app-config/application-prod.yml:/config/application.yml \
              -e SPRING_PROFILES_ACTIVE=prod \
              -e spring.config.additional-location=file:/config/ \
              --name myshop \
              ${{ secrets.DOCKER_USERNAME }}/myshop:latest